#
# SPDX-License-Identifier: Apache-2.0
#
# Copyright 2022-2024 The Jarviz authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

###############################################################################
# Shared
###############################################################################
# header
usage.headerHeading      = Jarviz is a JAR file analyzer tool
usage.synopsisHeading    = %nUsage:\u0020
usage.optionListHeading  = %nOptions:%n
usage.commandListHeading = %nCommands:%n
usage.footerHeading      = %nDocumentation found at https://github.com/kordamp/jarviz%n
helpCommand.command      = COMMAND
help                     = Show this help message and exit.
version                  = Print version information and exit.
system-property          = Sets a System property. 游대
cache-directory          = Cache directory.
classpath                = Paths to local JAR files. 游대
directory                = Directory with JAR files. 游대
file                     = JAR file to be analyzed (local). 游대
gav                      = JAR file to be analyzed (GAV coordinates). 游대
url                      = JAR file to be analyzed (remote). 游대
release                  = Specifies the target Java SE release.
attribute-name           = Name of a manifest attribute.
section-name             = Name of a manifest section.
service-name             = Name of a service interface.
entry-name               = Name of a JAR entry.
entry-pattern            = Pattern for a JAR entry name.
bytecode-version         = Bytecode version to search.
java-version             = Java version to search.
output-format            = Output format to use.
report-format            = Report format to use. 游대
report-path              = Path to report filename (without extension).
fail-on-error            = Fails the build on error.

###############################################################################
# Bytecode
###############################################################################
# header
jarviz.bytecode.usage.headerHeading =
jarviz.bytecode.usage.header        = Commands for the JAR's bytecode.

###############################################################################
# Bytecode.show
###############################################################################
# header
jarviz.bytecode.show.usage.headerHeading =
jarviz.bytecode.show.usage.header.0      = Show the JAR's bytecode version(s).
jarviz.bytecode.show.usage.header.1      = Will show the value of the Bytecode-Version manifest attribute
jarviz.bytecode.show.usage.header.2      = if it exists; an ordered list of total unversioned classes per
jarviz.bytecode.show.usage.header.3      = bytecode version; an ordered list of total versioned classes
jarviz.bytecode.show.usage.header.4      = per bytecode version (for MR-JARs only).
jarviz.bytecode.show.details             = Show matching class names.

###############################################################################
# Bytecode.validate
###############################################################################
# header
jarviz.bytecode.validate.usage.headerHeading =
jarviz.bytecode.validate.usage.header        = Validate the JAR's bytecode version(s).

###############################################################################
# Checksum
###############################################################################
# header
jarviz.checksum.usage.headerHeading =
jarviz.checksum.usage.header.0      = Verify JAR checksums.
jarviz.checksum.usage.header.1      = Compares locally computed checksums against those
jarviz.checksum.usage.header.2      = published at Maven Central

###############################################################################
# Entries
###############################################################################
# header
jarviz.entries.usage.headerHeading =
jarviz.entries.usage.header        = Commands for JAR entries.

###############################################################################
# Entries.extract
###############################################################################
# header
jarviz.entries.extract.usage.headerHeading =
jarviz.entries.extract.usage.header.0       = Extract a given JAR entry or entries.
jarviz.entries.extract.usage.header.1       = The value for entry-pattern may be a glob or regex expression
jarviz.entries.extract.usage.header.2       = Examples:
jarviz.entries.extract.usage.header.3       = \tjarviz entries extract --entry-pattern **/*.so
jarviz.entries.extract.usage.header.4       = \tjarviz entries extract --entry-pattern glob:**/*.so
jarviz.entries.extract.usage.header.5       = \tjarviz entries extract --entry-pattern regex:.*.so
jarviz.entries.extract.target-directory     = Directory where entries will be extracted.
jarviz.entries.extract.flatten              = Copy entry name instead of path if set to true.

###############################################################################
# Entries.find
###############################################################################
# header
jarviz.entries.find.usage.headerHeading =
jarviz.entries.find.usage.header.0       = Find a given JAR entry or entries.
jarviz.entries.find.usage.header.1       = The value for entry-pattern may be a glob or regex expression
jarviz.entries.find.usage.header.2       = Examples:
jarviz.entries.find.usage.header.3       = \tjarviz entries find --entry-pattern **/*.so
jarviz.entries.find.usage.header.4       = \tjarviz entries find --entry-pattern glob:**/*.so
jarviz.entries.find.usage.header.5       = \tjarviz entries find --entry-pattern regex:.*.so

###############################################################################
# Manifest
###############################################################################
# header
jarviz.manifest.usage.headerHeading =
jarviz.manifest.usage.header        = Commands for the JAR's manifest.

###############################################################################
# Manifest.query
###############################################################################
# header
jarviz.manifest.query.usage.headerHeading =
jarviz.manifest.query.usage.header        = Query manifest attributes.

###############################################################################
# Manifest.show
###############################################################################
# header
jarviz.manifest.show.usage.headerHeading =
jarviz.manifest.show.usage.header        = Show the JAR's manifest.

###############################################################################
# Module
###############################################################################
# header
jarviz.module.usage.headerHeading =
jarviz.module.usage.header        = Commands for modular JARs.

###############################################################################
# Module.name
###############################################################################
# header
jarviz.module.name.usage.headerHeading =
jarviz.module.name.usage.header.0      = Show the module name.
jarviz.module.name.usage.header.1      = Will show the module name, whether it's automatic or not,
jarviz.module.name.usage.header.2      = and if the name is valid.

###############################################################################
# Module.descriptor
###############################################################################
# header
jarviz.module.descriptor.usage.headerHeading =
jarviz.module.descriptor.usage.header.0      = Show the module descriptor.
jarviz.module.descriptor.usage.header.1      = Show the module descriptor in detail.

###############################################################################
# Mrjar
###############################################################################
# header
jarviz.mrjar.usage.headerHeading =
jarviz.mrjar.usage.header        = Commands for Multi-release JAR.

###############################################################################
# Mrjar.validate
###############################################################################
# header
jarviz.mrjar.validate.usage.headerHeading =
jarviz.mrjar.validate.usage.header        = Validate an MRJAR.

###############################################################################
# Packages
###############################################################################
# header
jarviz.packages.usage.headerHeading =
jarviz.packages.usage.header        = Commands for packages.

###############################################################################
# Packages.split
###############################################################################
# header
jarviz.packages.split.usage.headerHeading =
jarviz.packages.split.usage.header        = Display split packages.

###############################################################################
# Packages.validate
###############################################################################
# header
jarviz.packages.validate.usage.headerHeading =
jarviz.packages.validate.usage.header        = Validate package names.

###############################################################################
# Services
###############################################################################
# header
jarviz.services.usage.headerHeading =
jarviz.services.usage.header        = Commands for declarative services.

###############################################################################
# Services.list
###############################################################################
# header
jarviz.services.list.usage.headerHeading =
jarviz.services.list.usage.header        = Display registered services.

###############################################################################
# Services.show
###############################################################################
# header
jarviz.services.show.usage.headerHeading =
jarviz.services.show.usage.header        = Display service implementations.
