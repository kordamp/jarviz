#
# SPDX-License-Identifier: Apache-2.0
#
# Copyright 2022-2023 The Jarviz authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

###############################################################################
# Shared
###############################################################################
# header
usage.headerHeading      = Jarviz is a JAR file analyzer tool
usage.synopsisHeading    = %nUsage:\u0020
usage.optionListHeading  = %nOptions:%n
usage.commandListHeading = %nCommands:%n
usage.footerHeading      = %nDocumentation found at https://github.com/kordamp/jarviz%n
helpCommand.command      = COMMAND
help                     = Show this help message and exit.
version                  = Print version information and exit.
system-property          = Sets a System property. 游대
cache-directory          = Cache directory.
classpath                = Paths to local JAR files. 游대
directory                = Directory with JAR files. 游대
file                     = JAR file to be analyzed (local). 游대
gav                      = JAR file to be analyzed (GAV coordinates). 游대
url                      = JAR file to be analyzed (remote). 游대
release                  = Specifies the target Java SE release.
attribute-name           = Name of a manifest attribute.
section-name             = Name of a manifest section.
service-name             = Name of a service interface.
bytecode-version         = Bytecode version to search.
java-version             = Java version to search.
output-format            = Output format to use.
report-format            = Report format to use. 游대
report-path              = Path to report filename (without extension)

ERROR_INSUFFICIENT_INPUTS = Insufficient inputs. At least one of --file, --gav, --url, --directory, or --classpath must be defined.

###############################################################################
# Bytecode
###############################################################################
# header
jarviz.bytecode.usage.headerHeading =
jarviz.bytecode.usage.header        = Commands for the JAR's bytecode.

###############################################################################
# Bytecode.show
###############################################################################
# header
jarviz.bytecode.show.usage.headerHeading =
jarviz.bytecode.show.usage.header.0      = Show the JAR's bytecode version(s).
jarviz.bytecode.show.usage.header.1      = Will show the value of the Bytecode-Version manifest attribute
jarviz.bytecode.show.usage.header.2      = if it exists; an ordered list of total unversioned classes per
jarviz.bytecode.show.usage.header.3      = bytecode version; an ordered list of total versioned classes
jarviz.bytecode.show.usage.header.4      = per bytecode version (for MR-JARs only).
jarviz.bytecode.show.details             = Show matching class names.

###############################################################################
# Bytecode.validate
###############################################################################
# header
jarviz.bytecode.validate.usage.headerHeading =
jarviz.bytecode.validate.usage.header        = Validate the JAR's bytecode version(s).

###############################################################################
# Manifest
###############################################################################
# header
jarviz.manifest.usage.headerHeading =
jarviz.manifest.usage.header        = Commands for the JAR's manifest.

###############################################################################
# Manifest.query
###############################################################################
# header
jarviz.manifest.query.usage.headerHeading =
jarviz.manifest.query.usage.header        = Query manifest attributes.

###############################################################################
# Manifest.show
###############################################################################
# header
jarviz.manifest.show.usage.headerHeading =
jarviz.manifest.show.usage.header        = Show the JAR's manifest.

###############################################################################
# Module
###############################################################################
# header
jarviz.module.usage.headerHeading =
jarviz.module.usage.header        = Commands for modular JARs.

###############################################################################
# Module.name
###############################################################################
# header
jarviz.module.name.usage.headerHeading =
jarviz.module.name.usage.header.0      = Show the module name.
jarviz.module.name.usage.header.1      = Will show the module name, whether it's automatic or not,
jarviz.module.name.usage.header.2      = and if the name is valid.

###############################################################################
# Module.descriptor
###############################################################################
# header
jarviz.module.descriptor.usage.headerHeading =
jarviz.module.descriptor.usage.header.0      = Show the module descriptor.
jarviz.module.descriptor.usage.header.1      = Show the module descriptor in detail.

###############################################################################
# Mrjar
###############################################################################
# header
jarviz.mrjar.usage.headerHeading =
jarviz.mrjar.usage.header        = Commands for Multi-release JAR.

###############################################################################
# Mrjar.validate
###############################################################################
# header
jarviz.mrjar.validate.usage.headerHeading =
jarviz.mrjar.validate.usage.header        = Validate an MRJAR.

###############################################################################
# Packages
###############################################################################
# header
jarviz.packages.usage.headerHeading =
jarviz.packages.usage.header        = Commands for packages.

###############################################################################
# Packages.split
###############################################################################
# header
jarviz.packages.split.usage.headerHeading =
jarviz.packages.split.usage.header        = Display split packages.

###############################################################################
# Packages.validate
###############################################################################
# header
jarviz.packages.validate.usage.headerHeading =
jarviz.packages.validate.usage.header        = Validate package names.

###############################################################################
# Services
###############################################################################
# header
jarviz.services.usage.headerHeading =
jarviz.services.usage.header        = Commands for declarative services.

###############################################################################
# Services.list
###############################################################################
# header
jarviz.services.list.usage.headerHeading =
jarviz.services.list.usage.header        = Display registered services.

###############################################################################
# Services.show
###############################################################################
# header
jarviz.services.show.usage.headerHeading =
jarviz.services.show.usage.header        = Display service implementations.

###############################################################################
# Reports
###############################################################################

output.subject                     = @|yellow subject|@: {0}
output.total                       = @|yellow total|@: @|cyan {0}|@
manifest.query.attribute           = @|yellow {0}|@: {1}
services.show.service              = @|yellow service|@: {0}
bytecode.version.attribute         = @|yellow Bytecode-Version|@: {0}
bytecode.unversioned.classes.total = @|yellow Unversioned classes. Bytecode version|@: @|cyan {0}|@ @|yellow total|@: @|cyan {1}|@
bytecode.versioned.classes.total   = @|yellow Versioned classes|@ @|cyan {0}|@. @|yellow Bytecode version|@: @|cyan {1}|@ @|yellow total|@: @|cyan {2}|@
module.name                        = @|yellow name|@: {0}
module.version                     = @|yellow version|@: {0}
module.source                      = @|yellow source|@: {0}
module.open                        = @|yellow open|@: {0}
module.automatic                   = @|yellow automatic|@: {0}
module.valid                       = @|yellow valid|@: {0}
module.reason                      = @|yellow reason|@: {0}
module.main.class                  = @|yellow main-class|@: {0}
module.exports                     = @|yellow exports|@:
module.exports.qualified           = @|yellow qualified exports|@:
module.exports.to                  = {0} @|yellow to|@{1}
module.requires                    = @|yellow requires|@:
module.opens                       = @|yellow opens|@:
module.opens.qualified             = @|yellow qualified opens|@:
module.uses                        = @|yellow uses|@:
module.provides                    = @|yellow provides|@:
module.provides.with               = {0} @|yellow with|@{1}
module.opens.to                    = {0} @|yellow to|@{1}
module.contains                    = @|yellow contains|@:

report.key.jarviz          = jarviz
report.key.value           = value
report.key.command         = command
report.key.result          = result
report.key.subjects        = subjects
report.key.subject         = subject
report.key.jar             = jar
report.key.file            = file
report.key.size            = size
report.key.sha256          = sha256
report.key.services        = services
report.key.service         = service
report.key.implementations = implementations
report.key.implementation  = implementation
report.key.manifest        = manifest
report.key.name            = name
report.key.version         = version
report.key.source          = source
report.key.automatic       = automatic
report.key.valid           = valid
report.key.reason          = reason
report.key.attribute.name  = attributeName
report.key.section.name    = sectionName
report.key.module          = module
report.key.opens           = opens
report.key.open            = open
report.key.main.class      = mainClass
report.key.exports         = exports
report.key.export          = export
report.key.requires        = requires
report.key.require         = require
report.key.provides        = provides
report.key.provider        = provider
report.key.uses            = uses
report.key.packages        = packages
report.key.package         = package
report.key.modifiers       = modifiers
report.key.qualified       = qualified
report.key.targets         = targets
report.key.target          = target
report.key.contains        = contains
report.key.bytecode        = bytecode
report.key.unversioned     = unversioned
report.key.versioned       = versioned
report.key.total           = total
report.key.classes         = classes
report.key.class           = class
