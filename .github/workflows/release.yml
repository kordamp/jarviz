name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true

env:
  JAVA_VERSION: '11'
  JAVA_DISTRO: 'zulu'
  REPO_OWNER: 'kordamp'
  REPO_NAME: 'jarviz'
  GITHUB_BOT_EMAIL: '41898282+github-actions[bot]@users.noreply.github.com'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    outputs:
      JAR_SIZE: ${{ steps.bach.outputs.JAR_SIZE }}
      JAR_CSUM: ${{ steps.bach.outputs.JAR_CSUM }}
      DOC_SIZE: ${{ steps.bach.outputs.DOC_SIZE }}
      HASHES: ${{ steps.hash.outputs.hashes }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cancel previous run
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRO }}

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}-${{ hashFiles('**/gradle.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Cache Gradle wrapper
        uses: actions/cache@v3
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradlew-${{ hashFiles('**/gradlew') }}
          restore-keys: ${{ runner.os }}-gradlew-

      - name: Version
        id: vars
        shell: bash
        run: |
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          echo ${{ github.event.inputs.version }} > VERSION
          git add VERSION
          sed -i -e "s/^\:project-version\:\ .*/:project-version: ${{ github.event.inputs.version }}/g" README.adoc
          git config --global user.email "${{ secrets.COMMIT_EMAIL }}"
          git config --global user.name "Andres Almiray"
          git commit -a -m "Releasing version ${{ github.event.inputs.version }}"
          git push origin main

      - name: Stage
        run: ./gradlew -PreproducibleBuild=true build publish -S

      - name: Assemble
        uses: jreleaser/release-action@v2
        with:
          version: early-access
          arguments: assemble
        env:
          JRELEASER_PROJECT_VERSION: ${{ github.event.inputs.version }}

      - name: Release
        uses: jreleaser/release-action@v2
        with:
          version: early-access
          arguments: full-release
        env:
          JRELEASER_PROJECT_VERSION: ${{ github.event.inputs.version }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GIT_ACCESS_TOKEN }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.GPG_SECRET_KEY }}
          JRELEASER_SDKMAN_CONSUMER_KEY: ${{ secrets.SDKMAN_CONSUMER_KEY }}
          JRELEASER_SDKMAN_CONSUMER_TOKEN: ${{ secrets.SDKMAN_CONSUMER_TOKEN }}
          JRELEASER_TWITTER_CONSUMER_KEY: ${{ secrets.TWITTER_CONSUMER_KEY }}
          JRELEASER_TWITTER_CONSUMER_SECRET: ${{ secrets.TWITTER_CONSUMER_SECRET }}
          JRELEASER_TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          JRELEASER_TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
          JRELEASER_MASTODON_ACCESS_TOKEN: ${{ secrets.MASTODON_ACCESS_TOKEN }}
          JRELEASER_NEXUS2_MAVEN_CENTRAL_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          JRELEASER_NEXUS2_MAVEN_CENTRAL_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}

      - name: JReleaser release output
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: jarviz-release
          path: |
            out/jreleaser/trace.log
            out/jreleaser/output.properties

      - name: SLSA hashes
        shell: bash
        id: hash
        run: |
          echo "hashes=$(cat out/jreleaser/checksums/checksums_sha256.txt | base64 -w0)" >> "$GITHUB_OUTPUT"

      - name: Grab bach-info
        id: bach
        shell: bash
        run: |
          VERSION=${{ github.event.inputs.version }}
          JAR_SIZE=$(ls -l plugins/jarviz-tool-provider/build/libs/jarviz-tool-provider-$VERSION.jar | awk '{print $5}')
          JAR_CSUM=$(shasum -a 256 plugins/jarviz-tool-provider/build/libs/jarviz-tool-provider-$VERSION.jar | awk '{print $1}')
          DOC_SIZE=$(ls -l README.adoc | awk '{print $5}')
          echo "JAR_SIZE=$(echo $JAR_SIZE)" >> $GITHUB_OUTPUT
          echo "JAR_CSUM=$(echo $JAR_CSUM)" >> $GITHUB_OUTPUT
          echo "DOC_SIZE=$(echo $DOC_SIZE)" >> $GITHUB_OUTPUT

  provenance:
    needs: [release]
    permissions:
      actions: read
      id-token: write
      contents: write
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.4.0
    with:
      base64-subjects: "${{ needs.release.outputs.HASHES }}"
      upload-assets: false
      provenance-name: 'jarviz-all-${{ github.event.inputs.version }}.intoto.jsonl'

  upload-provenance:
    name: Upload provenance
    needs: [provenance]
    runs-on: ubuntu-latest
    steps:
      - name: Download upload script
        run: |
          curl -sL https://raw.githubusercontent.com/kordamp/jarviz/main/.github/scripts/upload-provenance.sh --output upload-provenance.sh
          chmod +x upload-provenance.sh

      - name: Download provenance
        uses: actions/download-artifact@v3
        with:
          name: jarviz-all-${{ github.event.inputs.version }}.intoto.jsonl

      - name: Commit
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_ACCESS_TOKEN }}
          TAG: "v${{ github.event.inputs.version }}"
          PROVENANCE_FILE: 'jarviz-all-${{ github.event.inputs.version }}.intoto.jsonl'
        run: sh upload-provenance.sh

  update-bach-info:
    name: Update bach-info
    needs: [release]
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: kordamp/bach-info
          ref: 'main'
          fetch-depth: 0
          token: ${{ secrets.GIT_ACCESS_TOKEN }}

      - name: Download bach-info script
        run: |
          curl -sL https://raw.githubusercontent.com/kordamp/jarviz/main/.github/scripts/update-bach-info.sh --output update-bach-info.sh
          chmod +x update-bach-info.sh

      - name: Commit
        env:
          TAG: "v${{ github.event.inputs.version }}"
          VERSION: ${{ github.event.inputs.version }}
          JAR_SIZE: ${{ needs.release.outputs.JAR_SIZE }}
          JAR_CSUM: ${{ needs.release.outputs.JAR_CSUM }}
          DOC_SIZE: ${{ needs.release.outputs.DOC_SIZE }}
        run: sh update-bach-info.sh
